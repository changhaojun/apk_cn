{"version":3,"sources":["webpack:///./src/app/devices/devices.module.ts","webpack:///./src/app/devices/devices.page.html","webpack:///./src/app/devices/devices.page.scss","webpack:///./src/app/devices/devices.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAYF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAV7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;YAC3B,eAAe,EAAE,EAAE;SACpB,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;AC1B9B,6hBAA6hB,eAAe,oEAAoE,aAAa,+T;;;;;;;;;;;ACA7nB,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACc;AACF;AAEjB;AAO7C;IAIE,qBACS,OAAsB,EACtB,eAAgC,EAChC,IAAkB;QAFlB,YAAO,GAAP,OAAO,CAAe;QACtB,oBAAe,GAAf,eAAe,CAAiB;QAChC,SAAI,GAAJ,IAAI,CAAc;QAL3B,YAAO,GAAa,EAAE,CAAC;IAMnB,CAAC;IAEL,8BAAQ,GAAR;IACA,CAAC;IAED,sCAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,SAAE,CAAC,CAAC,EAAE,CAAC;IAC7F,CAAC;IAEK,2CAAqB,GAA3B,UAA4B,MAAe;;;;;;4BAC3B,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,SAAS,EAAE,yEAAa;4BACxB,cAAc,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,cAAK,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE;yBACxD,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,KAAK,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC;4BACxB,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,IAAI,CAAC,IAAI,IAAI,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAK,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,SAAE,CAAC,CAAC,EAAE,CAAC;wBAC7F,CAAC,CAAC;wBACK,qBAAM,KAAK,CAAC,OAAO,EAAE;4BAA5B,sBAAO,SAAqB,EAAC;;;;KAC9B;IA1BU,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,+FAAkC;;SAEnC,CAAC;yCAMkB,4DAAa;YACL,8DAAe;YAC1B,0DAAY;OAPhB,WAAW,CA6BvB;IAAD,kBAAC;CAAA;AA7BuB","file":"devices-devices-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DevicesPage } from './devices.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DevicesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DevicesPage],\n  entryComponents: []\n})\nexport class DevicesPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n    <ion-title>Devices</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list>\\n      <ion-item *ngFor=\\\"let device of devices\\\" button (click)=\\\"presentAddDeviceModal(device)\\\">\\n          <ion-icon src=\\\"/assets/icon/shower-solid.svg\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-label>\\n            <ng-container *ngIf=\\\"device.name\\\">{{ device.name }}</ng-container>\\n            <ng-container *ngIf=\\\"!device.name\\\">{{ device.id }}</ng-container>\\n\\n          </ion-label>\\n        </ion-item>\\n  </ion-list>\\n    <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n        <ion-fab-button  (click)=\\\"presentAddDeviceModal()\\\">\\n          <ion-icon name=\\\"add\\\"></ion-icon>\\n        </ion-fab-button>\\n      </ion-fab>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldmljZXMvZGV2aWNlcy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController, ModalController } from '@ionic/angular';\nimport { AddDevicePage } from '../add-device/add-device.page';\nimport { Device } from './../../models/';\nimport { DataProvider } from 'src/providers';\n\n@Component({\n  selector: 'app-devices',\n  templateUrl: './devices.page.html',\n  styleUrls: ['./devices.page.scss'],\n})\nexport class DevicesPage implements OnInit {\n\n  devices: Device[] = [];\n\n  constructor(\n    public navCtrl: NavController,\n    public modalController: ModalController,\n    public data: DataProvider\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.devices = this.data.user && this.data.user.devices ? [...this.data.user.devices] : [];\n  }\n\n  async presentAddDeviceModal(device?: Device) {\n    const modal = await this.modalController.create({\n      component: AddDevicePage,\n      componentProps: { device: device ? {...device} : null }\n    });\n    modal.onDidDismiss().then(() => {\n      this.devices = this.data.user && this.data.user.devices ? [...this.data.user.devices] : [];\n    })\n    return await modal.present();\n  }\n\n\n}\n"],"sourceRoot":""}