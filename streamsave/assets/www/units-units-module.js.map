{"version":3,"sources":["webpack:///./src/app/units/units.module.ts","webpack:///./src/app/units/units.page.html","webpack:///./src/app/units/units.page.scss","webpack:///./src/app/units/units.page.ts"],"names":[],"mappings":"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","file":"units-units-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UnitsPage } from './units.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UnitsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UnitsPage]\n})\nexport class UnitsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <!-- <ion-button (click)=\\\"back()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button> -->\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Units</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list *ngIf=\\\"data && data.user\\\">\\n\\n    <ion-item button detail=\\\"false\\\" (click)=\\\"presentWaterUnitRadio()\\\">\\n      <ion-icon name=\\\"water\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label text-wrap>\\n        Water\\n      </ion-label>\\n      <ion-note slot=\\\"end\\\">{{ data.user.units.water }}</ion-note>\\n    </ion-item>\\n\\n    <ion-item button detail=\\\"false\\\" (click)=\\\"presentTemperatureRadio()\\\">\\n      <ion-icon name=\\\"thermometer\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label text-wrap>\\n        Temperature\\n      </ion-label>\\n      <ion-note *ngIf=\\\"data.user.units.temperature === 'c'\\\" slot=\\\"end\\\">Celcius</ion-note>\\n      <ion-note *ngIf=\\\"data.user.units.temperature === 'f'\\\" slot=\\\"end\\\">Fahrenheit</ion-note>\\n    </ion-item>\\n\\n    <ion-item button detail=\\\"false\\\" (click)=\\\"presentCurrencyRadio()\\\">\\n      <ion-icon name=\\\"cash\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label text-wrap>\\n        Currency\\n      </ion-label>\\n      <ion-note *ngIf=\\\"data.user.units.currency === 'eur'\\\" slot=\\\"end\\\">Euros</ion-note>\\n      <ion-note *ngIf=\\\"data.user.units.currency === 'usd'\\\" slot=\\\"end\\\">Dollars</ion-note>\\n    </ion-item>\\n\\n    <ion-item button detail=\\\"false\\\" (click)=\\\"presentWaterPricePrompt()\\\">\\n      <ion-icon name=\\\"water\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label text-wrap>\\n        Water price\\n      </ion-label>\\n      <ion-note *ngIf=\\\"data.user.units.water === 'litres'\\\" slot=\\\"end\\\">{{ data.user.units.waterPrice.toFixed(2) }} € / m<sup>3</sup></ion-note>\\n      <ion-note *ngIf=\\\"data.user.units.water === 'gallons'\\\" slot=\\\"end\\\">{{ (data.user.units.waterPrice * 100 / 264.172).toFixed(2) }} cents\\n        / gallon</ion-note>\\n    </ion-item>\\n\\n    <ion-item button detail=\\\"false\\\" (click)=\\\"presentWaterHeatingMethodRadio()\\\">\\n      <ion-icon *ngIf=\\\"data.user.units.heatingMethod === 'electricity'\\\" name=\\\"flash\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-icon *ngIf=\\\"data.user.units.heatingMethod === 'gas'\\\" name=\\\"flame\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label text-wrap>\\n        Water heating method\\n      </ion-label>\\n      <ion-note slot=\\\"end\\\" text-capitalize>{{ data.user.units.heatingMethod }}</ion-note>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"data.user.units.heatingMethod === 'electricity'\\\" button detail=\\\"false\\\" (click)=\\\"presentkWhPricePrompt()\\\">\\n      <ion-icon name=\\\"flash\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label text-wrap>\\n        kWh price\\n      </ion-label>\\n      <ion-note slot=\\\"end\\\">{{ data.user.units.electricity.kWhPrice }} Cents</ion-note>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"data.user.units.heatingMethod === 'gas'\\\" button detail=\\\"false\\\" (click)=\\\"presentGasPricePrompt()\\\">\\n      <ion-icon name=\\\"flame\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label text-wrap>\\n        Gas price\\n      </ion-label>\\n      <ion-note slot=\\\"end\\\">{{ data.user.units.gas.gasPrice }} cents / CCF</ion-note>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"data.user.units.heatingMethod === 'gas'\\\" button detail=\\\"false\\\" (click)=\\\"presentGasHeatContentPrompt()\\\">\\n      <ion-icon name=\\\"flame\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label text-wrap>\\n        <ion-text>\\n          <h3>\\n            Heat content of gas\\n          </h3>\\n        </ion-text>\\n        <ion-text color=\\\"medium\\\">\\n          <p>\\n            {{ data.user.units.gas.heatContent }} Btu per cubic foot\\n          </p>\\n        </ion-text>\\n      </ion-label>\\n      <!-- <ion-note slot=\\\"end\\\">{{ data.user.units.gas.heatContent }} Cents</ion-note> -->\\n    </ion-item>\\n  </ion-list>\\n\\n</ion-content>\"","module.exports = \"ion-note:first-letter {\\n  text-transform: capitalize; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdW5pdHMvQzpcXHdvcmtcXGRldlxcc3RyZWFtc2F2ZS9zcmNcXGFwcFxcdW5pdHNcXHVuaXRzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBCQUF5QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvdW5pdHMvdW5pdHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLW5vdGU6Zmlyc3QtbGV0dGVyIHtcclxuICAgIHRleHQtdHJhbnNmb3JtOmNhcGl0YWxpemU7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { Units, Electricity, Gas, User } from './../../models/';\nimport { LocalDatabaseProvider, DataProvider } from './../../providers/';\n\n@Component({\n  selector: 'app-units',\n  templateUrl: './units.page.html',\n  styleUrls: ['./units.page.scss'],\n})\nexport class UnitsPage implements OnInit {\n  units: Units = {\n    water: 'litres',\n    temperature: 'c',\n    currency: 'eur',\n    waterPrice: 5,\n    heatingMethod: 'electricity',\n    electricity: { kWhPrice: 5 },\n    gas: { gasPrice: 96, heatContent: 1024 }\n  };\n\n  user: User;\n\n  constructor(\n    // public modalController: ModalController,\n    public alertController: AlertController,\n    public localDb: LocalDatabaseProvider,\n    public data: DataProvider,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  // back() {\n  //   this.modalController.dismiss();\n  // }\n\n  async presentWaterPricePrompt() {\n    const header = this.data.user.units.water === 'litres' ? 'Water price € / m³' : 'Water price cents / gallon';\n    const value = this.data.user.units.water === 'litres' ? this.data.user.units.waterPrice : this.data.user.units.waterPrice * (100 / 264.172);\n    console.log('header', header, 'value', value);\n\n    const alert = await this.alertController.create({\n\n      header: header,\n      inputs: [\n        {\n          name: 'price',\n          type: 'number',\n          value: value\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n          handler: (data) => {\n            console.log('Confirm Ok');\n            console.log(data.price);\n            this.data.user.units.waterPrice = this.data.user.units.water === 'litres' ? data.price : (data.price / 100) / 0.00378541;\n            this.localDb.updateUser({...this.data.user});\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async presentkWhPricePrompt() {\n    const alert = await this.alertController.create({\n      header: 'KWh price (cents)',\n      inputs: [\n        {\n          name: 'price',\n          type: 'number',\n          value: this.data.user.units.electricity.kWhPrice ? this.data.user.units.electricity.kWhPrice : ''\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n          handler: (data) => {\n            console.log('Confirm Ok');\n            // this.units.heatingMethod = new Electricity(parseFloat(data.price));\n            // this.units.electricity.kWhPrice = parseFloat(data.price);\n            this.data.user.units.electricity.kWhPrice = data.price;\n            this.localDb.updateUser({...this.data.user});\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async presentWaterUnitRadio() {\n    const alert = await this.alertController.create({\n      header: 'Water unit',\n      inputs: [\n        {\n          name: 'litres',\n          type: 'radio',\n          label: 'Litres',\n          value: 'litres',\n          checked: this.data.user.units.water === 'litres' ? true : false\n        },\n        {\n          name: 'gallons',\n          type: 'radio',\n          label: 'Gallons',\n          value: 'gallons',\n          checked: this.data.user.units.water === 'gallons' ? true : false\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n          handler: (data) => {\n            console.log('Confirm Ok');\n            console.log('data', data);\n            // this.units.water = data;\n            this.data.user.units.water = data;\n            this.localDb.updateUser({...this.data.user});\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async presentTemperatureRadio() {\n    const alert = await this.alertController.create({\n      header: 'Currency',\n      inputs: [\n        {\n          name: 'c',\n          type: 'radio',\n          label: 'Celsius',\n          value: 'c',\n          checked: this.data.user.units.temperature === 'c' ? true : false\n        },\n        {\n          name: 'f',\n          type: 'radio',\n          label: 'Fahrenheit',\n          value: 'f',\n          checked: this.data.user.units.temperature === 'f'  ? true : false\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n          handler: (data) => {\n            console.log('data', data);\n            // if (data === 'c') {\n            //   console.log(this.units.heatingMethod);\n            //   this.units.temperature = 'c';\n            // }\n            // if (data === 'f') {\n            //   console.log(this.units.heatingMethod);\n            //   this.units.temperature = 'f';\n            // }\n            this.data.user.units.temperature = data;\n            this.localDb.updateUser({...this.data.user});\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async presentCurrencyRadio() {\n    const alert = await this.alertController.create({\n      header: 'Currency',\n      inputs: [\n        {\n          name: 'eur',\n          type: 'radio',\n          label: 'Euros',\n          value: 'eur',\n          checked: this.data.user.units.currency === 'eur' ? true : false\n        },\n        {\n          name: 'usd',\n          type: 'radio',\n          label: 'Us Dollars',\n          value: 'usd',\n          checked: this.data.user.units.currency === 'usd'  ? true : false\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n          handler: (data) => {\n            console.log('data', data);\n            // if (data === 'eur') {\n            //   console.log(this.units.currency);\n            //   this.units.currency = 'eur';\n            // }\n            // if (data === 'usd') {\n            //   console.log(this.units.currency);\n            //   this.units.currency = 'usd';\n            // }\n            this.data.user.units.currency = data;\n            this.localDb.updateUser({...this.data.user});\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async presentWaterHeatingMethodRadio() {\n    const alert = await this.alertController.create({\n      header: 'Water unit',\n      inputs: [\n        {\n          name: 'electricity',\n          type: 'radio',\n          label: 'Electricity',\n          value: 'electricity',\n          checked: this.data.user.units.heatingMethod === 'electricity' ? true : false\n        },\n        {\n          name: 'gas',\n          type: 'radio',\n          label: 'Gas',\n          value: 'gas',\n          checked: this.data.user.units.heatingMethod === 'gas'  ? true : false\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n          handler: (data) => {\n            console.log('data', data);\n            // if (data === 'gas') {\n            //   console.log(this.units.heatingMethod);\n            //   this.units.heatingMethod = 'gas';\n            // }\n            // if (data === 'electricity') {\n            //   console.log(this.units.heatingMethod);\n            //   this.units.heatingMethod = 'electricity';\n            // }\n            this.data.user.units.heatingMethod = data;\n            this.localDb.updateUser({...this.data.user});\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async presentGasPricePrompt() {\n    const alert = await this.alertController.create({\n      header: 'Gas price (cents / CCF)',\n      inputs: [\n        {\n          name: 'price',\n          type: 'number',\n          value: this.data.user.units.gas.gasPrice ? this.data.user.units.gas.gasPrice : ''\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n          handler: (data) => {\n            console.log('Confirm Ok');\n            // this.units.heatingMethod = new Electricity(parseFloat(data.price));\n            // this.units.gas.gasPrice = parseFloat(data.price);\n            this.data.user.units.gas.gasPrice = data.price;\n            this.localDb.updateUser({...this.data.user});\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async presentGasHeatContentPrompt() {\n    const alert = await this.alertController.create({\n      header: 'Heat content of gas',\n      message: 'Btu per cubic foot',\n      inputs: [\n        {\n          name: 'heatcontent',\n          type: 'number',\n          value: this.data.user.units.gas.heatContent ? this.data.user.units.gas.heatContent : ''\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n          handler: (data) => {\n            console.log('Confirm Ok');\n            // this.units.heatingMethod = new Electricity(parseFloat(data.price));\n            // this.units.gas.heatContent = parseFloat(data.heatcontent);\n            this.data.user.units.gas.heatContent = data.heatcontent;\n            this.localDb.updateUser({...this.data.user});\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n}\n"],"sourceRoot":""}